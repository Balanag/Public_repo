# Default values for chatserver.

name: chat-server
namespace: chatserver
replicaCount: 1

image:
  repository: europe-docker.pkg.dev/bytrocloud/bytro-docker-internal/chat-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: 
- name: gcr-json-key
nameOverride: ""
fullnameOverride: ""

environment: live

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: chat-server-svc
  type: LoadBalancer
  port: 925
  annotations: {
    networking.gke.io/load-balancer-type: Internal
  }

ingress:
  enabled: true
  name: chat-server-ingress
  className: "nginx"
  annotations: {
    kubernetes.io/ingress.class: nginx,
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600",
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true",
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1",
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4",
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1 TLSv1.1 TLSv1.2",
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60",
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600",
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600",
    nginx.ingress.kubernetes.io/proxy-body-size: "20m",
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1",
    nginx.ingress.kubernetes.io/enable-cors: "true",
    nginx.ingress.kubernetes.io/connection-proxy-header: "upgrade",
    nginx.ingress.kubernetes.io/ssl-dh-param: "lb-dhparam"
  }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: c.bytro.com
      paths:
        - path: /
          pathType: Prefix
    - host: '*.c.bytro.com'
      paths:
        - path: /
          pathType: Prefix
  tls: 
    - secretName: chat-tls
      hosts:
        - c.bytro.com
        - '*.c.bytro.com'

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthcheck
    port: 8900
readinessProbe:
  httpGet:
    path: /healthcheck
    port: 8900

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
- name: chatserver-config
  secret:
    secretName: chatserver.cnf
    optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
- name: chatserver-config
  mountPath: "/etc/chatserver"
  readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
